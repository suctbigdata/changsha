<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.data.tencent</groupId>
    <artifactId>modelFather</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>mvn-one</module>
        <module>mvn-two</module>
    </modules>


    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>3.8.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>rpm-maven-plugin</artifactId>
                <version>2.1.5</version>

                <executions>
                    <execution>
                        <id>generate-rpm</id>
                        <goals>
                            <goal>rpm</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <license>GPL (c) 2005, SWWDC</license>
                    <distribution>Trash 2005</distribution>
                    <group>Application/Collectors</group>
                    <packager>SWWDC</packager>
                    <!-- 打包出来的rpm 名称是依赖一下 四个属性来构建的，如果没有指定就会按照默认值 -->
                    <name>rpmtest</name><!-- 不指定的情况下，默认使用project artifact -->
                    <version>1.0</version> <!-- 不指定的情况下，默认使用 project version -->
                    <release>SNAPSHOT</release><!-- 不指定的情况下，默认使用 SNAPSHOT+时间-->
                    <!-- 是否包含编译环境架构。如果设置为false 默认使用norach,如果设置为true 默认使用编译环境（686，i386,x86_64等） -->
                    <needarch>true</needarch>
                    <!-- 以上设置的 输出结构 rpmtest-1.0-SNAPSHOT.x86_64.rpm -->
                    <targetOS>any</targetOS>
                    <!--<targetOS></targetOS>-->
                    <defineStatements>
                        <defineStatement>_unpackaged_files_terminate_build 0</defineStatement>
                    </defineStatements>
                    <mappings>
                        <mapping>
                            <directory>/usr/local/hello/bin</directory>
                            <filemode>750</filemode>
                            <username>tencent</username>
                            <groupname>tencent</groupname>
                            <sources>
                                <source>
                                    <location>bin</location>
                                </source>
                            </sources>
                        </mapping>
                        <!-- 没有测试-->
                        <mapping>
                            <directory>/usr/bin</directory>
                            <sources>
                                <softlinkSource>
                                    <location>/usr/local/hello/bin/run.sh</location>
                                </softlinkSource>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/usr/local/hello/lib</directory>
                            <filemode>750</filemode>
                            <username>tencent</username>
                            <groupname>tencent</groupname>
                            <sources>
                                <source>
                                    <location>${project.build.directory}/rpmtest-1.0-SNAPSHOT.jar</location>
                                    <location>${project.build.directory}/lib</location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/usr/local/hello/conf</directory>
                            <configuration>true</configuration>
                            <filemode>750</filemode>
                            <username>tencent</username>
                            <groupname>tencent</groupname>
                            <sources>
                                <source>
                                    <location>src/main/resources</location>
                                </source>
                            </sources>
                        </mapping>
                    </mappings>
                    <preinstallScriptlet>
                        <script>echo "installing now"</script>
                    </preinstallScriptlet>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>